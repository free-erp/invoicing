package com.jzh.demo.client.report.manager;

import com.jdatabeans.beans.CPanel;
import com.jdatabeans.beans.data.IDataRow;
import com.jdatabeans.beans.data.JDataDatePicker;
import com.jdatabeans.beans.data.ObjectDataRow;
import com.jdatabeans.beans.data.table.ITableColumnModel;
import com.jdatabeans.beans.data.table.ITableModel;
import com.jdatabeans.beans.data.table.JDataTableColumn;
import com.jzh.demo.client.main.Main;
import com.jzh.demo.client.report.CBaseQueryWindow;
import com.jzh.erp.entity.accounting.DailyReportPo;
import com.jzh.erp.service.Manager.IManagerService;
import com.jzh.erp.service.sale.SaleQueryVo;
import java.awt.Dimension;
import java.util.Currency;
import java.util.Date;
import java.util.List;
import javax.swing.BorderFactory;

/**
 *
 * @author liufei
 */
public class CManagerDailyQueryWindow extends CBaseQueryWindow
{
    private JDataDatePicker beginDateField;
    private JDataDatePicker endDateField;

    public CManagerDailyQueryWindow(String title)
    {
        super(title);
    }

    protected int getPermission() {
        return 65535;
    }

    protected void clearInfo()
    {
    }

    protected void select()
    {

          SaleQueryVo vo = new SaleQueryVo(Main.getMainFrame().getCompany());

//        if(this.numberField.getText() != null && !this.numberField.getText().trim().equals(""))
//        {
//            vo.setProductNumber(this.numberField.getText().trim());
//        }
        Object obj = null;
        if(!beginDateField.getEditorText().equals(""))
        {
            obj = beginDateField.getSelectedItem();
            if(obj != null && obj instanceof Date)
            {
                Date startDate = (Date)obj;
                vo.setStartDatePo(startDate);
            }
        }

        if(!endDateField.getEditorText().equals(""))
        {
            obj = endDateField.getSelectedItem();
            if(obj != null && obj instanceof Date)
            {
                Date endDate = (Date)obj;
                System.out.println(endDate);
                vo.setEndDatePo(endDate);
            }
        }

        ITableModel model = this.dataTable.getTableModel();
        IManagerService managerService = Main.getServiceManager().getManagerService();
        this.dataSource.clear();
//        vo.setWay(1);
        List<DailyReportPo> DailyReportPos =managerService.getManagerForm(vo);
        if(DailyReportPos == null || DailyReportPos.size() == 0)
        {
            this.clearInfo();
        }
        for(DailyReportPo po : DailyReportPos)
        {
            IDataRow dataRow = new ObjectDataRow(po, "id", null);
            model.insertDataRow(dataRow);
        }
    }

    protected CPanel getMainPanel()
    {
        CPanel panel = new CPanel();
        panel.setBorder(BorderFactory.createEtchedBorder());
		panel.setPreferredSize(new Dimension(700,40));
		panel.setLayout(null);
        beginDateField = new JDataDatePicker();
        endDateField = new JDataDatePicker();
//        this.beginDateField.setEnabled(false);
//        this.endDateField.setEnabled(false);
//        this.selectButton.setEnabled(false);
//        this.clearButton.setEnabled(false);
        int x = 60;
        int y = 15;
        panel.addComponent(beginDateField, x , y, 120, 20, "开始日期", 50);
        panel.addComponent(endDateField, x + 170, y, 100, 20, "结束日期", 50);
        panel.addComponent(selectButton, x + 300, y, 75, 25);
        panel.addComponent(clearButton, x + 380, y, 75, 25);

        return panel;
    }

    protected void initColumns()
    {
        ITableColumnModel columnModel = this.dataTable.getTableColumnModel();
        JDataTableColumn column = new JDataTableColumn();
		column.setHeaderText("流水号");
        column.setColumnName("id");
        column.setWidth(50);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("单据日期");
        column.setColumnName("formDate");
        column.setWidth(80);
        column.setValueType(Date.class);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
		column.setHeaderText("业务类型");
        column.setColumnName("operationType");
        column.setWidth(60);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
		column.setHeaderText("单据编号");
        column.setColumnName("formNumber");
        column.setWidth(100);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("客商编号");
        column.setColumnName("customer.number");
        column.setWidth(60);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("客商名称");
        column.setColumnName("customer.name");
        column.setWidth(100);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("销售金额");
        column.setColumnName("saleMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("收款金额");
        column.setColumnName("receiveMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("毛利");
        column.setColumnName("grossProfitMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("成本");
        column.setColumnName("cost");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("采购金额");
        column.setColumnName("purchaseMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("付款金额");
        column.setColumnName("paymentMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("现金余额");
        column.setColumnName("cashMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("库存总额");
        column.setColumnName("stockMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);
    }
}
