package com.jzh.demo.client.report.manager;

import com.jdatabeans.beans.CPanel;
import com.jdatabeans.beans.ValueChangedEvent;
import com.jdatabeans.beans.ValueChangedListener;
import com.jdatabeans.beans.data.IDataRow;
import com.jdatabeans.beans.data.JDataNumberField;
import com.jdatabeans.beans.data.ObjectDataRow;
import com.jdatabeans.beans.data.table.ITableColumnModel;
import com.jdatabeans.beans.data.table.ITableModel;
import com.jdatabeans.beans.data.table.JDataTableColumn;
import com.jzh.demo.client.main.Main;
import com.jzh.demo.client.report.CBaseQueryWindow;
import com.jzh.erp.entity.accounting.DailyReportPo;
import com.jzh.erp.service.IManagerService;
import com.jzh.erp.service.sale.SaleQueryVo;
import java.awt.Dimension;
import java.text.ParsePosition;
import java.text.SimpleDateFormat;
import java.util.Currency;
import java.util.Date;
import java.util.List;
import javax.swing.BorderFactory;

/**
 *
 * @author liufei
 */
public class CManagerYearQueryWindow extends CBaseQueryWindow implements ValueChangedListener
{
    private JDataNumberField beginDateField;
    public CManagerYearQueryWindow(String title)
    {
        super(title);
    }

    protected int getPermission() {
        return 65535;
    }

    protected void clearInfo()
    {
    }

    protected void select()
    {
        SaleQueryVo vo = new SaleQueryVo(Main.getMainFrame().getCompany());
//        if(this.numberField.getText() != null && !this.numberField.getText().trim().equals(""))
//        {
//            vo.setProductNumber(this.numberField.getText().trim());
//        }
        String obj = null;
        if(!beginDateField.getText().equals(""))
        {
            obj = beginDateField.getText();
             SimpleDateFormat formatter = new SimpleDateFormat("yyyy");//format格式："yyyy-MM-dd"
           ParsePosition pos = new ParsePosition(0);
           Date strtodate = formatter.parse(obj, pos);
                Date startDate = strtodate;
                vo.setStartDatePo(startDate);
        }

        if(!beginDateField.getText().equals(""))
        {
            obj = beginDateField.getText();
             SimpleDateFormat formatter = new SimpleDateFormat("yyyy");//format格式："yyyy-MM-dd"
           ParsePosition pos = new ParsePosition(0);
           Date str = formatter.parse(obj, pos);
           str.setYear(str.getYear()+1);
                vo.setEndDatePo(str);

        }

        ITableModel model = this.dataTable.getTableModel();
        IManagerService managerService = Main.getServiceManager().getManagerService();
        this.dataSource.clear();
//        vo.setWay(1);
        List<DailyReportPo> DailyReportPos =managerService.getCountManagerForm(vo);
        if(DailyReportPos == null || DailyReportPos.size() == 0)
        {
            this.clearInfo();
        }
        for(DailyReportPo po : DailyReportPos)
        {
            IDataRow dataRow = new ObjectDataRow(po, "id", null);
            model.insertDataRow(dataRow);
        }
    }

    protected CPanel getMainPanel()
    {
        CPanel panel = new CPanel();
        panel.setBorder(BorderFactory.createEtchedBorder());
		panel.setPreferredSize(new Dimension(700,40));
		panel.setLayout(null);
           this.clearButton.setVisible(false);
        beginDateField = new JDataNumberField();
        Date date = new Date();
        int ys=date.getYear()+1900;
        String s=Integer.toString(ys);
        beginDateField.setText(s);
        beginDateField.addValueChangedListener(this);
//        this.beginDateField.setEnabled(false);
//        this.selectButton.setEnabled(false);
//        this.clearButton.setEnabled(false);
        int x = 60;
        int y = 15;
        panel.addComponent(beginDateField, x , y, 120, 20, "开始日期", 50);
        panel.addComponent(selectButton, x + 300, y, 75, 25);
        panel.addComponent(clearButton, x + 380, y, 75, 25);

        return panel;
    }

    protected void initColumns()
    {
        ITableColumnModel columnModel = this.dataTable.getTableColumnModel();
        JDataTableColumn column = new JDataTableColumn();
        column.setHeaderText("月份");
        column.setColumnName("formDate");
        column.setWidth(80);
        column.setValueType(Date.class);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("销售总额");
        column.setColumnName("saleMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("收款总额");
        column.setColumnName("receiveMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("毛利");
        column.setColumnName("grossProfitMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("成本");
        column.setColumnName("cost");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("采购总额");
        column.setColumnName("purchaseMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("付款总额");
        column.setColumnName("paymentMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("现金余额");
        column.setColumnName("cashMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);

        column = new JDataTableColumn();
        column.setHeaderText("库存总额");
        column.setColumnName("stockMoney");
        column.setValueType(Currency.class);
        column.setWidth(80);
        columnModel.addColumn(column);
    }

    public void valueChanged(ValueChangedEvent evt) {
            if (evt.getSource() == this.beginDateField) {
         int s = beginDateField.getText().indexOf(".");
         if(s > 0){
             beginDateField.setText("");
         }
            }
    }
 







   
}
